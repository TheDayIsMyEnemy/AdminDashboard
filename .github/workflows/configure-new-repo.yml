name: Configure new repo
on:
  push:
    branches:
      - main

permissions:
  actions: write
  checks: write
  contents: write
  pull-requests: write
  deployments: write
  issues: read
  statuses: read

jobs:
  configure-new-repo:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set repository name
        id: repo_name
        run: |
            echo "::set-output name=name::${{ github.event.repository.name }}"
            echo "::set-output name=pattern::s/BlazorTemplate/${{ github.event.repository.name }}/g"
            echo "Repository Name: ${{ steps.repo_name.outputs.name }}"
            echo "Pattern: ${{ steps.repo_name.outputs.pattern }}"

      - name: Update project structure
        run: |
          ls src -l
          echo "Contents before renaming:"
          ls -R

          # Renaming directories
          find . -type d -name 'BlazorTemplate*' -exec bash -c 'echo "Renaming directory: {} to $(echo "{}" | sed ${{ steps.repo_name.outputs.pattern }})"' \; -exec bash -c 'mv "{}" "$(echo "{}" | sed ${{ steps.repo_name.outputs.pattern }})"' \;

          # Renaming files
          find . -type f \( -name '*.cs' -o -name '*.csproj' -o -name '*.sln' -o -name '*.razor' -o -name '*.cshtml' -o -name '*.md' \) -exec bash -c 'echo "Renaming file: {} to $(echo "{}" | sed ${{ steps.repo_name.outputs.pattern }})"' \; -exec bash -c 'mv "{}" "$(echo "{}" | sed ${{ steps.repo_name.outputs.pattern }})"' \;

          echo "Contents after renaming:"
          ls -R

          # Redirecting stderr to /dev/null to suppress error messages
          find . -type f \( -name '*.razor' -o -name '*.cshtml' -o -name '*.cs' -o -name '*.csproj' -o -name '*.sln' -o -name '*.md' \) -exec bash -c 'echo "Updating content in file: {}"' \; -exec sed -i ${{ steps.repo_name.outputs.pattern }} {} + 2>/dev/null

          rm .github/workflows/configure-new-repo.yml
          echo "Contents after removing workflow file:"
          ls -R

      - name: Commit changes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name 'TheDayIsMyEnemy'
          git config user.email 'TheDayIsMyEnemy@users.noreply.github.com'
          git checkout -b new-repo
          git add .
          git status
          git commit -m "Update project structure"
          git push -u origin new-repo
