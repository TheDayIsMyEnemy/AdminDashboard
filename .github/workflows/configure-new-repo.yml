name: Configure New Repository
on:
  push:
    branches:
      - main

permissions:
  actions: write
  checks: write
  contents: write
  pull-requests: write
  deployments: write
  issues: read
  statuses: read

jobs:
  configure:
    runs-on: ubuntu-latest
    if: ${{ github.event.created && github.repository != 'TheDayIsMyEnemy/BlazorTemplate' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set repository name
        id: repo_name
        run: echo "::set-output name=name::${{ github.event.repository.name }}"

      - name: Rename files and folders
        run: |

          find ../../ ! -path . -name '.*' -prune -o -type d -exec bash -c 'mv "{}" "$(echo "{}" | sed "s/BlazorTemplate/"${{ steps.repo_name.outputs.name }}"/g")"' \;

          find ../../ ! -path . -name '.*' -prune -o -type f \( -name '*.cs' -o -name '*.csproj' -o -name '*.sln' \) -exec bash -c 'mv "{}" "$(echo "{}" | sed "s/BlazorTemplate/"${{ steps.repo_name.outputs.name }}"/g")"' \;

          find ../../ -type f \( -name '*.razor' -o -name '*.cshtml' -o -name '*.cs' -o -name '*.csproj' -o -name '*.sln' -o -name '*.md' \) -exec sed -i "s/BlazorTemplate/"${{ steps.repo_name.outputs.name }}"/g" {} +

      - name: Remove setup files
        run: rm .github/workflows/configure-new-repo.yml

      - name: Commit changes
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN || github.token }}
        run: |
          git config user.name 'TheDayIsMyEnemy'
          git config user.email 'TheDayIsMyEnemy@users.noreply.github.com'
          git checkout -b new-repo
          git add -A
          git commit -m "Update project structure"
          git push -u origin new-repo

      - name: Create pull request
        run: gh pr create --title test --body tesxt --base main --head new-repo
        # run: gh pr create --repo ${{ github.event.repository.url }} --base main --head new-repo --title 'Setup new repository' --body 'Updates the project structure to match the repo name'
